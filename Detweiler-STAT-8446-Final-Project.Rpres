Traffic Camera Violations in Chicago
========================================================
author: Brian Detweiler
date: April 24, 2017
autosize: true

The Data
========================================================

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(knitr)
library(lubridate)
library(dplyr)
library(TSA)
library(zoo)
library(xts)
library(data.table)
library(forecast)
#library(ggfortify)
library(reshape2)
library(ggmap)
library(rMaps)
library(htmlwidgets)
library(plotrix)
library(leaflet)
library(broom)
```

```{r, echo=FALSE}
### Data Processing - Only need to do this once. Leaving here for reproducibility.

#dat <- read.csv('Speed_Camera_Violations.csv')

# Date formatting
#dat$VIOLATION.DATE <- mdy(dat$VIOLATION.DATE)

# Get Lat-Lons
#addresses.df <- data.frame(address=unique(dat$ADDRESS))
#addresses.df$address <- as.character(addresses.df$address)

# Specify Chicago, so Google Maps knows where to send us
#addresses.df$address <- paste0(addresses.df$address, ", CHICAGO, IL")
#latlon <- geocode(addresses.df$address)

# Remove the Chicago part
#addresses.df$address <- gsub(", CHICAGO, IL", "", addresses.df$address)

# Populate the final data frame with the lat-lon data
#for (i in 1:length(addresses.df[,1])) {
  #dat[which(as.character(dat$ADDRESS) == addresses.df$address[i]),]$LATITUDE <- addresses.df$lat[i]
  #dat[which(as.character(dat$ADDRESS) == addresses.df$address[i]),]$LONGITUDE <- addresses.df$lon[i]
#} 

#saveRDS(dat, file = 'violations.rds')

# Verify we have all the right points
dat <- readRDS('violations.rds')

digits.format <- function(x, sci.digits = 2) { 
  return(format(x, big.mark=",", digits = 2, nsmall = sci.digits))
}

qqplot.norm <- function (vec, title)
{
  # following four lines from base R's qqline()
  y <- quantile(vec[!is.na(vec)], c(0.25, 0.75))
  x <- qnorm(c(0.25, 0.75))
  slope <- diff(y)/diff(x)
  int <- y[1L] - slope * x[1L]

  d <- data.frame(resids = vec)

  ggplot(d, aes(sample = resids)) + 
    stat_qq() + 
    geom_abline(slope = slope, intercept = int) +
    labs(title = title)

}

undiff <- function(time.series, first.value) {
  return(c(first.value, first.value + cumsum(time.series)))
}
```

Interactive map: <http://bdetweiler.github.io/projects/chicago-traffic-cameras.html>

- City of Chicago traffic camera data: <https://data.cityofchicago.org/Transportation/Speed-Camera-Violations/hhkd-xvj4/>
- `r length(unique(dat$CAMERA.ID))` cameras in the dataset
- Data range from `r min(dat$VIOLATION.DATE)` to `r max(dat$VIOLATION.DATE)`

```{r, fig.height=4, fig.width=5, fig.align='center', echo=FALSE, warning=FALSE}
kable(dat[1:5, 1:4], caption="Sample of the data", align = 'c')
```
***
```{r, fig.height=7, fig.width=10, fig.align='center', echo=FALSE, warning=FALSE}
ggplot(dat, aes(y=VIOLATIONS, x=VIOLATION.DATE, colour=CAMERA.ID)) +
  geom_line() +
  theme(legend.position="none") +
  labs(title="Violations by Traffic Cam", x="Violation Date", y="Number of Violations")
```

City-Level Data
========================================================

- Aggregate violations by date
- High level summary view of all violations in Chicago as Time Series

```{r, fig.height=10, fig.width=15, fig.align='center', echo=FALSE, warning=FALSE, message=FALSE}

dat.grouped <- dat %>% dplyr::group_by(CAMERA.ID, ADDRESS, LATITUDE, LONGITUDE) %>%
  dplyr::summarise(TOT=sum(VIOLATIONS))

dat.grouped <- as.data.frame(dat.grouped)
# Scale the data so we can plot it
dat.grouped$TOT.SCALED <- rescale(dat.grouped$TOT, range(5, 25))

dat.grouped <- dat %>% dplyr::group_by(VIOLATION.DATE) %>%
  dplyr::summarise(sum(VIOLATIONS))

dat.grouped <- as.data.frame(dat.grouped)
colnames(dat.grouped) <- c('VIOLATION.DATE', 'VIOLATIONS')

violations.mean <- mean(dat.grouped$VIOLATIONS)
two.sd <- 2 * sd(dat.grouped$VIOLATIONS)

ggplot(dat.grouped, aes(y=VIOLATIONS, x=VIOLATION.DATE)) +
  geom_line() +
  geom_hline(yintercept = violations.mean, col="blue") +
  geom_hline(yintercept = violations.mean + two.sd, col="red", linetype="dashed") +
  geom_hline(yintercept = violations.mean - two.sd, col="red", linetype="dashed") +
  theme(legend.position="none") +
  labs(title="All Traffic Violations in Chicago", x="Violation Date", y="Number of Violations")
```

Stationarity of First Difference
========================================================

- $\nabla Y_t$ results in constant mean over time
- Variance still quite large, and heteroskedastic in some places

```{r, fig.height=10, fig.width=15, fig.align='center', echo=FALSE}
violations.zoo <- zoo(dat.grouped$VIOLATIONS, order.by = dat.grouped$VIOLATION.DATE)

violations.diff <- diff(violations.zoo)

violations.diff.var <- var(violations.diff)
violations.diff.mean <- mean(violations.diff)

g <- autoplot(violations.diff) +
  geom_abline(slope=0, intercept = violations.diff.mean, col="blue") +
  labs(title="First Difference", y="", x="Date")

dickey.fuller <- tidy(adf.test(violations.diff))
dickey.fuller.p.val <- dickey.fuller$p.value
```

- Augmented Dickey-Fuller test p-value $< `r dickey.fuller.p.val`$

```{r, fig.height=10, fig.width=15, fig.align='center', echo=FALSE}
g
```

ACF and PACF of First Difference
========================================================
```{r, fig.height=8, fig.width=11, fig.align='center', echo=FALSE}
acf(violations.diff, lag.max = 60)
```
- ACF is problematic, and appears to have some seasonal influences at $7t$

***

```{r, fig.height=8, fig.width=11, fig.align='center', echo=FALSE}
pacf(violations.diff, lag.max = 60)
```
- PACF is also problematic
- Difficult to pick a model based on these


arma.subsets()
========================================================

Suggests an ARIMA(7, 1, 10) given by the equation
$$
\begin{split}
  W_t &= \nabla Y_t = Y_t - Y_{t - 1} \\
  W_t &= \phi_1 W_{t - 1} + \phi_7 W_{t - 7} + e_t - \theta_{1} e_{1} - \theta_6 e_{t - 6} - \theta_7 e_{t - 7} - \theta_8 e_{t - 8} - \theta_{10} e_{t - 10} \\
\end{split}
$$

```{r, fig.height=10, fig.width=15, fig.align='center', echo=FALSE, warning=FALSE}
subs <- armasubsets(violations.diff, nar = 13, nma = 13)
plot(subs)
```

```{r, fig.height=4, fig.width=5, fig.align='center', echo=FALSE, warning=FALSE}
ar1 <- NA
ar2 <- 0
ar3 <- 0
ar4 <- 0
ar5 <- 0
ar6 <- 0
ar7 <- NA

ma1 <- NA
ma2 <- 0
ma3 <- 0
ma4 <- 0
ma5 <- 0
ma6 <- NA
ma7 <- NA
ma8 <- NA
ma9 <- 0
ma10 <- NA
intercept <- NA

fit <- Arima(violations.zoo,
             order = c(7, 1, 10), 
             method = "ML", 
             fixed = c(ar1, ar2, ar3, ar4, ar5, ar6, ar7,
                       ma1, ma2, ma3, ma4, ma5, ma6, ma7, ma8, ma9, ma10),
             transform.pars = FALSE)
            #seasonal=list(order=c(0,0,1))) 

model1.aic <- fit$aic

fitted.ts <- zoo(fitted(fit))

fit.df <- tidy(fit$x) %>% select(index, value)
fit.df <- cbind(fit.df, fitted.val=coredata(fitted.ts))
fit.df <- cbind(fit.df, resid=coredata(fit$residuals))
fit.df <- cbind(fit.df, resid.stand=coredata(rstandard(fit)))
```

Model Diagnostics
========================================================

```{r, fig.height=4, fig.width=5, fig.align='center', echo=FALSE, warning=FALSE}

ggplot(fit.df, aes(x = index, y = resid.stand)) +
  geom_line() +
  labs(title="Residiuals of ARIMA(7, 1, 10)")
```
```{r, fig.height=4, fig.width=5, fig.align='center', echo=FALSE, warning=FALSE}
acf(fit.df$resid.stand)
```

- AIC: 15246.82

***

```{r, fig.height=4, fig.width=5, fig.align='center', echo=FALSE, warning=FALSE}
ggplot(fit.df, aes(x = resid.stand)) +
  geom_histogram(bins=100) +
  labs(title="Distribution of Residuals of ARIMA(7, 1, 10")

qqplot.norm(fit.df$resid.stand, "Residuals of ARIMA(7, 1, 10)")

shapiro <- tidy(shapiro.test(fit.df$resid.stand))
shapiro.p.value <- shapiro$p.value

ljung.box.p.value <- tidy(Box.test(fit.df$resid.stand, type="Ljung-Box"))$p.value
```

- Shapiro-Wilk test p-value  << 0.001
- Ljung-Box test p-value > 0.95 
  - Indepenent


Forecast
========================================================
```{r, fig.height=10, fig.width=15, fig.align='center', echo=FALSE, warning=FALSE}
pred <- predict(fit, n.ahead=295)
pred.ts <- pred$pred

remainder.of.year <- seq(as.Date('2017-03-12'), as.Date('2017-12-31'), by="day")
pred.df <- data.frame(index=remainder.of.year)
pred.df$value <- coredata(pred.ts)
pred.df$se.upper <- coredata(pred$se) + coredata(pred.ts)
pred.df$se.lower <- -coredata(pred$se) + coredata(pred.ts)


ggplot(fit.df, aes(x = index, y = value)) + 
  geom_line(colour='red') +
  geom_line(aes(x = index, y = fitted.val), colour='blue') +
    geom_smooth(data = pred.df, 
                aes(x=index, y=value, ymax=se.upper, ymin=se.lower), 
                colour='red', 
                stat='identity')
```

auto.arima()
========================================================

Suggests an ARIMA(1, 1, 3) given by the equation
$$
\begin{split}
  W_t &= \nabla Y_t = Y_t - Y_{t - 1} \\
  W_t &= \phi_1 W_{t - 1} + e_t - \theta_{1} e_{1} - \theta_2 e_{t - 2} - \theta_3 e_{t - 3} \\
\end{split}
$$

```{r, fig.height=10, fig.width=15, fig.align='center', echo=FALSE, warning=FALSE}
fit <- auto.arima(violations.zoo, seasonal = TRUE)

model2.aic <- fit$aic

fitted.ts <- zoo(fitted(fit))

fit.df <- data.frame(fitted.val=tidy(fit$fitted)$x)

fit.df <- cbind(fit.df, value=coredata(violations.zoo))
fit.df <- cbind(fit.df, index=index(violations.zoo))
fit.df <- cbind(fit.df, resid=coredata(fit$residuals))
fit.df <- cbind(fit.df, resid.stand=coredata(rstandard(fit)))

ggplot(fit.df) +
  geom_line(aes(x = index(index), y = value), col="red") +
  geom_line(aes(x = index(index), y = fitted.val), col="blue") +
  labs(title="ARIMA(1, 1, 3)")
```


Model Diagnostics
========================================================

```{r, fig.height=4, fig.width=5, fig.align='center', echo=FALSE, warning=FALSE}

ggplot(fit.df, aes(x = index, y = resid.stand)) +
  geom_line() +
  labs(title="Residiuals of ARIMA(7, 1, 10)")
```

```{r, fig.height=4, fig.width=5, fig.align='center', echo=FALSE, warning=FALSE}
acf(fit.df$resid.stand)
```

- AIC: 15331.86

***

```{r, fig.height=4, fig.width=5, fig.align='center', echo=FALSE, warning=FALSE}
ggplot(fit.df, aes(x = resid.stand)) +
  geom_histogram(bins=100) +
  labs(title="Distribution of Residuals of ARIMA(7, 1, 10")

qqplot.norm(fit.df$resid.stand, "Residuals of ARIMA(7, 1, 10)")

shapiro <- tidy(shapiro.test(fit.df$resid.stand))
shapiro.p.value <- shapiro$p.value

ljung.box.p.value <- tidy(Box.test(fit.df$resid.stand, type="Ljung-Box"))$p.value
```

- Shapiro-Wilk test p-value  << 0.001
- Ljung-Box test p-value > 0.95 
  - Indepenent


Forecast
========================================================
```{r, fig.height=10, fig.width=15, fig.align='center', echo=FALSE, warning=FALSE}
pred <- predict(fit, n.ahead=295)
pred.ts <- pred$pred

remainder.of.year <- seq(as.Date('2017-03-12'), as.Date('2017-12-31'), by="day")
pred.df <- data.frame(index=remainder.of.year)
pred.df$value <- coredata(pred.ts)
pred.df$se.upper <- coredata(pred$se) + coredata(pred.ts)
pred.df$se.lower <- -coredata(pred$se) + coredata(pred.ts)


ggplot(fit.df, aes(x = index, y = value)) + 
  geom_line(colour='red') +
  geom_line(aes(x = index, y = fitted.val), colour='blue') +
    geom_smooth(data = pred.df, 
                aes(x=index, y=value, ymax=se.upper, ymin=se.lower), 
                colour='red', 
                stat='identity')
```


Conclusion
========================================================

- Data difficult to fit due to high day-to-day variance
- Addative Outliers present possibly due to weather (snow)
- Both models have i.i.d. normal residuals - Model 2 contains autocorrelation
- Model 1 has lower AIC
- Model 2 has more realistic prediction limits
